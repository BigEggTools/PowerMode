name: build-release
on:
  workflow_dispatch:
jobs:
  build-extension:
    runs-on: windows-latest
    env: 
        DOTNET_NOLOGO: true
        DOTNET_CLI_TELEMETRY_OPTOUT: true
        RepositoryUrl: 'https://github.com/${{ github.repository }}'
        RepositoryBranch: '${{ github.ref }}'
        SourceRevisionId: '${{ github.sha }}'
        Configuration: Release
        SolutionPath: PowerMode.sln
        VsixManifestPath: PowerMode\source.extension.vsixmanifest
        VsixPath: PowerMode\bin\Release\PowerMode.vsix
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.2
      id: MsBuildSetup
    - name: Restore NuGet Packages
      run: nuget restore $env:SolutionPath
    - name: Build Extension
      run: msbuild $env:SolutionPath /t:Rebuild
      env: 
        DeployExtension: False
#     - name: Test extension
#       run: dotnet test --no-build --verbosity normal $env:SolutionPath
    - name: Generate Release Note
      run: |
        git fetch --prune --unshallow
        $commitLog = git log "$(git describe --tags --abbrev=0)..HEAD" --pretty=format:"- %s"
        "What's new: `r`n`r`n$([string]::Join("`r`n",$commitLog))" | Out-File release_note.md -Encoding utf8
    - name: Create Github Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body_path: release_note.md
        draft: true
        prerelease: false
    - name: Upload Release Asset - VSIX
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ env.VsixPath }}
        asset_name: PowerMode.vsix
        asset_content_type: binary/octet-stream
#     - name: Publish extension to Marketplace
#       uses: cezarypiatek/VsixPublisherAction@0.1
#       with:
#         extension-file: ${{ env.VsixPath }}
#         publish-manifest-file: ${{ env.VsixPublishManifestPath }}
#         personal-access-code: ${{ secrets.VS_PUBLISHER_ACCESS_TOKEN }}      
